version: '3.8'
services:
  db:
    image: mysql:8.0
    container_name: my-sql-server
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: myshop
    ports:
      - "3308:3306"
    volumes:
      - mysql_data_retry:/var/lib/mysql
#    networks:
#      - my-network

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
#    networks:
#      - my-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/myshop
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
    env_file:
      - .env
#    networks:
#      - my-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/myshop
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
#    networks:
#      - my-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/myshop
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
#    networks:
#      - my-network

#  api-gateway:
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#    ports:
#      - "8084:8084"
#    networks:
#      - my-network

volumes:
  mysql_data_retry:

#networks:
#  my-network:
#    driver: bridge

#  redis:
#    image: redis:latest
#    container_name: my-redis-server
#    ports:
#      - "6379:6379"
#    restart: always

